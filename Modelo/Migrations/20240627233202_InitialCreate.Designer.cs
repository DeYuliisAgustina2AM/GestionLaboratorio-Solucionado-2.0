// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelo;

#nullable disable

namespace Modelo.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240627233202_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.Computadora", b =>
                {
                    b.Property<int>("ComputadoraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComputadoraId"));

                    b.Property<string>("CodigoComputadora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionComputadora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LaboratorioId")
                        .HasColumnType("int");

                    b.Property<int>("condicion")
                        .HasColumnType("int");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("ComputadoraId");

                    b.HasIndex("LaboratorioId");

                    b.ToTable("Computadoras");
                });

            modelBuilder.Entity("Entidades.Laboratorio", b =>
                {
                    b.Property<int>("LaboratorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LaboratorioId"));

                    b.Property<int>("CapacidadMaxima")
                        .HasColumnType("int");

                    b.Property<string>("NombreLaboratorio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("LaboratorioId");

                    b.HasIndex("SedeId");

                    b.HasIndex("TicketId");

                    b.ToTable("Laboratorios");
                });

            modelBuilder.Entity("Entidades.Sede", b =>
                {
                    b.Property<int>("SedeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SedeId"));

                    b.Property<string>("DireccionSede")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreSede")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversidadId")
                        .HasColumnType("int");

                    b.HasKey("SedeId");

                    b.HasIndex("UniversidadId");

                    b.ToTable("Sedes");
                });

            modelBuilder.Entity("Entidades.Tecnico", b =>
                {
                    b.Property<int>("TecnicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TecnicoId"));

                    b.Property<int>("CantidadTickets")
                        .HasColumnType("int");

                    b.Property<long>("Dni")
                        .HasColumnType("bigint");

                    b.Property<int>("Legajo")
                        .HasColumnType("int");

                    b.Property<string>("NombreyApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TecnicoId");

                    b.ToTable("Tecnicos");
                });

            modelBuilder.Entity("Entidades.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int>("ComputadoraId")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionTicket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TecnicoId")
                        .HasColumnType("int");

                    b.Property<int>("categoria")
                        .HasColumnType("int");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<int>("tipo")
                        .HasColumnType("int");

                    b.Property<int>("urgencia")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("ComputadoraId");

                    b.HasIndex("TecnicoId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Entidades.Universidad", b =>
                {
                    b.Property<int>("UniversidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniversidadId"));

                    b.Property<string>("NombreUniversidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UniversidadId");

                    b.ToTable("Universidades");
                });

            modelBuilder.Entity("Entidades.Computadora", b =>
                {
                    b.HasOne("Entidades.Laboratorio", "Laboratorio")
                        .WithMany("Computadoras")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("Entidades.Laboratorio", b =>
                {
                    b.HasOne("Entidades.Sede", "Sede")
                        .WithMany("Laboratorios")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Ticket", null)
                        .WithMany("Laboratorios")
                        .HasForeignKey("TicketId");

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("Entidades.Sede", b =>
                {
                    b.HasOne("Entidades.Universidad", "Universidad")
                        .WithMany("Sedes")
                        .HasForeignKey("UniversidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universidad");
                });

            modelBuilder.Entity("Entidades.Ticket", b =>
                {
                    b.HasOne("Entidades.Computadora", "Computadora")
                        .WithMany("Tickets")
                        .HasForeignKey("ComputadoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Tecnico", "Tecnico")
                        .WithMany("Tickets")
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computadora");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("Entidades.Computadora", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Entidades.Laboratorio", b =>
                {
                    b.Navigation("Computadoras");
                });

            modelBuilder.Entity("Entidades.Sede", b =>
                {
                    b.Navigation("Laboratorios");
                });

            modelBuilder.Entity("Entidades.Tecnico", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Entidades.Ticket", b =>
                {
                    b.Navigation("Laboratorios");
                });

            modelBuilder.Entity("Entidades.Universidad", b =>
                {
                    b.Navigation("Sedes");
                });
#pragma warning restore 612, 618
        }
    }
}
